var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
import { bold } from "kleur/colors";
import { canonicalURL as getCanonicalURL } from "../util.js";
import { isCSSRequest } from "./css.js";
import { renderSlot } from "../../runtime/server/index.js";
import { warn } from "../logger.js";
function createResult(args) {
  var _a, _b;
  const { astroConfig, origin, params, pathname, renderers } = args;
  const result = {
    styles: new Set(),
    scripts: (_a = args.scripts) != null ? _a : new Set(),
    links: (_b = args.links) != null ? _b : new Set(),
    createAstro(astroGlobal, props, slots) {
      const site = new URL(origin);
      const url = new URL("." + pathname, site);
      const canonicalURL = getCanonicalURL("." + pathname, astroConfig.buildOptions.site || origin);
      return {
        __proto__: astroGlobal,
        props,
        request: {
          canonicalURL,
          params,
          url
        },
        resolve(path) {
          if (astroConfig.buildOptions.experimentalStaticBuild) {
            let extra = `This can be replaced with a dynamic import like so: await import("${path}")`;
            if (isCSSRequest(path)) {
              extra = `It looks like you are resolving styles. If you are adding a link tag, replace with this:

<style global>
@import "${path}";
</style>
`;
            }
            warn(args.logging, `deprecation`, `${bold("Astro.resolve()")} is deprecated. We see that you are trying to resolve ${path}.
${extra}`);
            return "";
          }
          return astroGlobal.resolve(path);
        },
        slots: Object.fromEntries(Object.entries(slots || {}).map(([slotName]) => [slotName, true])),
        privateRenderSlotDoNotUse(slotName) {
          return renderSlot(result, slots ? slots[slotName] : null);
        },
        async privateRenderMarkdownDoNotUse(content, opts) {
          let mdRender = astroConfig.markdownOptions.render;
          let renderOpts = {};
          if (Array.isArray(mdRender)) {
            renderOpts = mdRender[1];
            mdRender = mdRender[0];
          }
          if (typeof mdRender === "string") {
            ({ default: mdRender } = await import(mdRender));
          } else if (mdRender instanceof Promise) {
            ({ default: mdRender } = await mdRender);
          }
          const { code } = await mdRender(content, __spreadValues(__spreadValues({}, renderOpts), opts != null ? opts : {}));
          return code;
        }
      };
    },
    async resolve(s) {
      return "";
    },
    _metadata: {
      renderers,
      pathname,
      experimentalStaticBuild: astroConfig.buildOptions.experimentalStaticBuild
    }
  };
  return result;
}
export {
  createResult
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL2NvcmUvc3NyL3Jlc3VsdC50cyJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBYU8sc0JBQXNCLE1BQW1DO0FBbkJoRTtBQW9CQyxRQUFNLEVBQUUsYUFBYSxRQUFRLFFBQVEsVUFBVSxjQUFjO0FBSzdELFFBQU0sU0FBb0I7QUFBQSxJQUN6QixRQUFRLElBQUk7QUFBQSxJQUNaLFNBQVMsV0FBSyxZQUFMLFlBQWdCLElBQUk7QUFBQSxJQUM3QixPQUFPLFdBQUssVUFBTCxZQUFjLElBQUk7QUFBQSxJQUV6QixZQUFZLGFBQWlDLE9BQTRCLE9BQW1DO0FBQzNHLFlBQU0sT0FBTyxJQUFJLElBQUk7QUFDckIsWUFBTSxNQUFNLElBQUksSUFBSSxNQUFNLFVBQVU7QUFDcEMsWUFBTSxlQUFlLGdCQUFnQixNQUFNLFVBQVUsWUFBWSxhQUFhLFFBQVE7QUFDdEYsYUFBTztBQUFBLFFBQ04sV0FBVztBQUFBLFFBQ1g7QUFBQSxRQUNBLFNBQVM7QUFBQSxVQUNSO0FBQUEsVUFDQTtBQUFBLFVBQ0E7QUFBQTtBQUFBLFFBRUQsUUFBUSxNQUFjO0FBQ3JCLGNBQUksWUFBWSxhQUFhLHlCQUF5QjtBQUNyRCxnQkFBSSxRQUFRLHFFQUFxRTtBQUNqRixnQkFBSSxhQUFhLE9BQU87QUFDdkIsc0JBQVE7QUFBQTtBQUFBO0FBQUEsV0FHSjtBQUFBO0FBQUE7QUFBQTtBQUtMLGlCQUNDLEtBQUssU0FDTCxlQUNBLEdBQUcsS0FBSywyRUFBMkU7QUFBQSxFQUN4RjtBQUdJLG1CQUFPO0FBQUE7QUFHUixpQkFBTyxZQUFZLFFBQVE7QUFBQTtBQUFBLFFBRTVCLE9BQU8sT0FBTyxZQUFZLE9BQU8sUUFBUSxTQUFTLElBQUksSUFBSSxDQUFDLENBQUMsY0FBYyxDQUFDLFVBQVU7QUFBQSxRQUVyRiwwQkFBMEIsVUFBa0I7QUFDM0MsaUJBQU8sV0FBVyxRQUFRLFFBQVEsTUFBTSxZQUFZO0FBQUE7QUFBQSxjQUcvQyw4QkFBOEIsU0FBaUIsTUFBVztBQUMvRCxjQUFJLFdBQVcsWUFBWSxnQkFBZ0I7QUFDM0MsY0FBSSxhQUFhO0FBQ2pCLGNBQUksTUFBTSxRQUFRLFdBQVc7QUFDNUIseUJBQWEsU0FBUztBQUN0Qix1QkFBVyxTQUFTO0FBQUE7QUFHckIsY0FBSSxPQUFPLGFBQWEsVUFBVTtBQUNqQyxZQUFDLEdBQUUsU0FBUyxhQUFhLE1BQU0sT0FBTztBQUFBLHFCQUc5QixvQkFBb0IsU0FBUztBQUNyQyxZQUFDLEdBQUUsU0FBUyxhQUFhLE1BQU07QUFBQTtBQUVoQyxnQkFBTSxFQUFFLFNBQVMsTUFBTSxTQUFTLFNBQVMsa0NBQUssYUFBZ0Isc0JBQVE7QUFDdEUsaUJBQU87QUFBQTtBQUFBO0FBQUE7QUFBQSxVQUtKLFFBQVEsR0FBNEI7QUFDekMsYUFBTztBQUFBO0FBQUEsSUFFUixXQUFXO0FBQUEsTUFDVjtBQUFBLE1BQ0E7QUFBQSxNQUNBLHlCQUF5QixZQUFZLGFBQWE7QUFBQTtBQUFBO0FBSXBELFNBQU87QUFBQTsiLAogICJuYW1lcyI6IFtdCn0K
