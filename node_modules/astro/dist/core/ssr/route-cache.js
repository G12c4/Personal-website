import { debug } from "../logger.js";
import { generatePaginateFunction } from "../ssr/paginate.js";
async function callGetStaticPaths(mod, route, rssFn) {
  const staticPaths = await (await mod.getStaticPaths({
    paginate: generatePaginateFunction(route),
    rss: rssFn || (() => {
    })
  })).flat();
  const keyedStaticPaths = staticPaths;
  keyedStaticPaths.keyed = new Map();
  for (const sp of keyedStaticPaths) {
    const paramsKey = JSON.stringify(sp.params);
    keyedStaticPaths.keyed.set(paramsKey, sp);
  }
  return keyedStaticPaths;
}
async function assignStaticPaths(routeCache, route, mod, rssFn) {
  const staticPaths = await callGetStaticPaths(mod, route, rssFn);
  routeCache[route.component] = staticPaths;
}
async function ensureRouteCached(routeCache, route, mod, rssFn) {
  if (!routeCache[route.component]) {
    const staticPaths = await callGetStaticPaths(mod, route, rssFn);
    routeCache[route.component] = staticPaths;
    return staticPaths;
  } else {
    return routeCache[route.component];
  }
}
function findPathItemByKey(staticPaths, paramsKey, logging) {
  let matchedStaticPath = staticPaths.keyed.get(paramsKey);
  if (matchedStaticPath) {
    return matchedStaticPath;
  }
  debug(logging, "findPathItemByKey", `Unexpected cache miss looking for ${paramsKey}`);
  matchedStaticPath = staticPaths.find(({ params: _params }) => JSON.stringify(_params) === paramsKey);
}
export {
  assignStaticPaths,
  callGetStaticPaths,
  ensureRouteCached,
  findPathItemByKey
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL2NvcmUvc3NyL3JvdXRlLWNhY2hlLnRzIl0sCiAgIm1hcHBpbmdzIjogIkFBR0E7QUFDQTtBQUlBLGtDQUF5QyxLQUF3QixPQUFrQixPQUFtRDtBQUNySSxRQUFNLGNBQW9DLE1BQ3pDLE9BQU0sSUFBSSxlQUFnQjtBQUFBLElBQ3pCLFVBQVUseUJBQXlCO0FBQUEsSUFDbkMsS0FDQyxTQUNDLE9BQU07QUFBQTtBQUFBLE1BSVI7QUFFRixRQUFNLG1CQUFtQjtBQUN6QixtQkFBaUIsUUFBUSxJQUFJO0FBQzdCLGFBQVcsTUFBTSxrQkFBa0I7QUFDbEMsVUFBTSxZQUFZLEtBQUssVUFBVSxHQUFHO0FBQ3BDLHFCQUFpQixNQUFNLElBQUksV0FBVztBQUFBO0FBR3ZDLFNBQU87QUFBQTtBQUdSLGlDQUF3QyxZQUF3QixPQUFrQixLQUF3QixPQUE4QjtBQUN2SSxRQUFNLGNBQWMsTUFBTSxtQkFBbUIsS0FBSyxPQUFPO0FBQ3pELGFBQVcsTUFBTSxhQUFhO0FBQUE7QUFHL0IsaUNBQXdDLFlBQXdCLE9BQWtCLEtBQXdCLE9BQW1EO0FBQzVKLE1BQUksQ0FBQyxXQUFXLE1BQU0sWUFBWTtBQUNqQyxVQUFNLGNBQWMsTUFBTSxtQkFBbUIsS0FBSyxPQUFPO0FBQ3pELGVBQVcsTUFBTSxhQUFhO0FBQzlCLFdBQU87QUFBQSxTQUNEO0FBQ04sV0FBTyxXQUFXLE1BQU07QUFBQTtBQUFBO0FBSW5CLDJCQUEyQixhQUF3QyxXQUFtQixTQUFxQjtBQUNqSCxNQUFJLG9CQUFvQixZQUFZLE1BQU0sSUFBSTtBQUM5QyxNQUFJLG1CQUFtQjtBQUN0QixXQUFPO0FBQUE7QUFHUixRQUFNLFNBQVMscUJBQXFCLHFDQUFxQztBQUN6RSxzQkFBb0IsWUFBWSxLQUFLLENBQUMsRUFBRSxRQUFRLGNBQWMsS0FBSyxVQUFVLGFBQWE7QUFBQTsiLAogICJuYW1lcyI6IFtdCn0K
